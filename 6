7.
Create menu in Application
1.
Click New Project, the New Project Dialog box appears.
2.
Choose Empty Views Activity then click Next.
3.
Specify the Name of your project, Select the Language as Java, and Select the
Minimum SDK as API 16 (“Jelly Bean”, Android 4.1). Click Finish Button.
4.
To create another activity for Home Page, Right Click App→New→Activity→ Empty Views Activity. A New Android Activity dialog box appears, Specify the Name of the activity as HomeScreen then click Finish.
5. To create a Menu Resource File:
Right-click on the res directory in your Android project, navigate to New > Android Resource File, and name the file menus.xml, Root element as Menu and update the following content.
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
<item android:id="@+id/php" android:title="PHP"/>
<item android:id="@+id/java"
android:title="JAVA"/>
<item android:id="@+id/csharp"
android:title="C#"/>
</menu>
The menu design is as follows:

6. Update the following code in MainActivity.java
package com.example.menuexample;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.Toast;
import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
EdgeToEdge.enable(this);
setContentView(R.layout.activity_main);
}
@Override
public boolean onCreatePanelMenu(int featureId, @NonNull Menu menu) {
MenuInflater inflater=getMenuInflater();
inflater.inflate(R.menu.menus,menu);
return true;
}
@Override
public boolean onOptionsItemSelected(@NonNull MenuItem item) {
if(item.getItemId()==R.id.php) {
Toast.makeText(this, "Php Page", Toast.LENGTH_SHORT).show();
}
if(item.getItemId()==R.id.java) {
Toast.makeText(this, "Java Page", Toast.LENGTH_SHORT).show();
}
if(item.getItemId()==R.id.csharp) {
Toast.makeText(this, "C# Page", Toast.LENGTH_SHORT).show();
}
return super.onOptionsItemSelected(item);
}
}
7. Set the Uses-Permission in AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">
<uses-permission android:name="android.permission.INTERNET" />
<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:roundIcon="@mipmap/ic_launcher_round"
android:supportsRtl="true"
android:theme="@style/Theme.AppCompat.Light"
tools:targetApi="31">
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>
</activity>
</application>
</manifest>
8. Click Run app or shift+F10 to execute the application.
